name: Continuous Integration

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with: { python-version: "3.8" }
    - name: Format
      run: cmake -D FORMAT_COMMAND=clang-format-12 -P cmake/lint.cmake
  
  test-linux:
    needs: [lint]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        cxx: [g++-4.8, g++-10, clang++-9]
        build_type: [Debug, Release]
        std: [20]
        os: [ubuntu-latest]
        include:
          - cxx: g++-4.8
            install: sudo apt install g++-4.8
            os: ubuntu-18.04
          - cxx: g++-8
            build_type: Debug
            std: 14
            install: sudo apt install g++-8
            os: ubuntu-18.04
          - cxx: g++-10
            build_type: Debug
            std: 17
            os: ubuntu-18.04
          - cxx: g++-11
            build_type: Debug
            std: 20
            os: ubuntu-20.04
            install: sudo apt install g++-11
          - cxx: clang++-9
            build_type: Debug
            std: 17
            os: ubuntu-18.04
          - cxx: clang++-11
            build_type: Debug
            std: 20
            os: ubuntu-20.04
          - shared: ON

    steps:
    - uses: actions/checkout@v2

    - name: Install Python
      uses: actions/setup-python@v2
      with: { python-version: "3.8" }

    - name: Create Build Environment
      run: |
        ${{matrix.install}}
        sudo apt update
        sudo apt install locales-all
        pip3 install "conan<2"
        conan profile new default --detect
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan install . -b missing
    
    - name: Configure
      env: 
        CXX: ${{ matrix.cxx }}
      run: cmake "--preset=ci-ubuntu"  . \
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
        -DBUILD_SHARED_LIBS=${{ matrix.shared }}
    
    - name: Build
      run: |
        threads=`nproc`
        cmake --build build --config ${{ matrix.build_type }} --parallel $threads

    - name: Test
      working-directory: build
      run: |
        threads=`nproc`
        ctest -C ${{ matrix.build_type }} -j $threads


  test-windows:
    needs: [lint]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        platform: [Win32, x64]
        build_type: [Debug, Release]
        standard: [20]

    steps:
    - uses: actions/checkout@v2

    - name: Install Python
      uses: actions/setup-python@v2
      with: { python-version: "3.8" }

    - name: Install Dependencies
      run: |
        pip3 install "conan<2"
        conan profile new default --detect 
        conan install . -b missing

    - name: Configure
      run: |
        cmake -A ${{ matrix.platform }} -DCMAKE_CXX_STANDARD=${{ matrix.standard }} -DBUILD_SHARED_LIBS=${{ matrix.shared }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} --preset=ci-windows . 
          
    - name: Build
      run: |
        $threads = (Get-CimInstance Win32_ComputerSystem).NumberOfLogicalProcessors
        cmake --build build --config ${{ matrix.build_type }} --parallel $threads

    - name: Test
      working-directory: build
      run: |
        $threads = (Get-CimInstance Win32_ComputerSystem).NumberOfLogicalProcessors
        ctest -C ${{ matrix.build_type }} --output-on-failure -j $threads
        

  test-macos:
    needs: [lint]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build_type: [Debug, Release]
        include: 
          - shared: ON

    steps:
    - uses: actions/checkout@v2

    - name: Install Python
      uses: actions/setup-python@v2
      with: { python-version: "3.8" }

    - name: Install Dependencies
      run: |
        pip3 install "conan<2"
        conan profile new default --detect 
        conan install . -b missing

    - name: Configure
      run: |
        cmake -DBUILD_SHARED_LIBS=${{ matrix.shared }}  -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} --preset=ci-macos .
          
    - name: Build
      run: |
        threads=`sysctl -n hw.logicalcpu`
        cmake --build build --config ${{ matrix.build_type }} --parallel $threads
    
    - name: Test
      working-directory: build
      run: |
        threads=`sysctl -n hw.logicalcpu`
        ctest -C ${{ matrix.build_type}} --output-on-failure -j $threads

  docs:
    # Deploy only when tests succeed
    needs: [test-linux, test-windows, test-macos]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
      && github.event_name == 'push'
      && github.repository_owner == 'siech0'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with: { python-version: "3.8" }
    - name: Install Dependencies
      run: sudo apt-get update -q
        && sudo apt-get install doxygen build-essential make -q -y
    # We need to configure cmake before generating documentation
    #  as cmake will output the relevant Doxyfile.
    - name: Install Conan
      shell: bash
      run: |
        pip3 install "conan<2"
        conan profile new default --detect
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan install . -b missing
    - name: Configure
      shell: pwsh
      run: cmake --preset=ci-docs-unix
    - name: Run doxygen
      shell: pwsh
      run: |
        cd build
        ls
        doxygen
    - name: Deploy docs
      uses: peaceiris/actions-gh-pages@v3
      with: 
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: build/html